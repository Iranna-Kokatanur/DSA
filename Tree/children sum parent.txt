class Tree
{
    //Function to check whether all nodes of a tree have the value 
    //equal to the sum of their child nodes.
    public static void isSumProperty(Node root, boolean[] ans){
        if(root == null) return;
        
        isSumProperty(root.left, ans);
        isSumProperty(root.right, ans);
        
        int total = 0;
        if(root.left != null) total += root.left.data;
        if(root.right != null) total += root.right.data;
        
        if(root.left != null || root.right != null) {
            if(total != root.data) ans[0] = false;
        }
        
    }
    public static int isSumProperty(Node root)
    {
        
        boolean[] ans = new boolean[1];
        ans[0] = true;
        isSumProperty(root, ans);
        return ans[0]? 1: 0;
    }
}




//OTHER CODE

public static void ChangeTree(Node root){
    if(root == null) return;
    int child = 0;
    if(root.left != null) child += root.left.data;
    if(root.right != null) child += root.right.data;
    if(child >= root.data) root.data = chiild;
    else{
        if(root.left != null) root.left.data = root.data;
        if(root.right != null) root.right.data = root.data;
    }
    ChangeTree(root.left);
    ChangeTree(root.right);
    int total = 0;
    if(root.left != null) total += root.left.data;
    if(root.right != null) total += root.right.data;
    if(root.left != null || root.right != null) root.data = total;
}

main(){
changeTree(root);
}
