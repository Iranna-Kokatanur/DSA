
public class AVL {
	
	public class Node{
		private int value;
		private Node left;
		private Node right;
		private int height;
		
		public Node(int value) {
			this.value = value;
		}
		
		public int getValue() {
			return this.value;
		}
	}
	
	private static Node root;
	
	public AVL() {}
	
	public void insert(int value) {
		root = insertNode(root, value);
	}
	
	public Node insertNode(Node root, int value) {
		if(root == null) {
			return new Node(value);
		}
		
		if(value < root.value) {
			root.left = insertNode(root.left, value);
		}
		
		if(value > root.value) {
			root.right = insertNode(root.right, value);
		}
		
		root.height = Math.max(height(root.left), height(root.right)) + 1;
		return rotate(root);
	}
	
	public Node rotate(Node root) {
		if(height(root.left) - height(root.right) > 1) {
			
			//Left Heavy
			
			if(height(root.left.left) - height(root.left.right) > 0) {
				// L - L
				return rightRotate(root);
			}
			
			if(height(root.left.left) - height(root.left.right) < 0) {
				// L - R
				root.left = leftRotate(root.left);
				return rightRotate(root);
			}
			
		}
		
		if(height(root.left) - height(root.right) < -1) {
			
			//Right Heavy
			
			if(height(root.right.left) - height(root.right.right) > 0) {
				// R - L
				root.right = rightRotate(root.right);
				return leftRotate(root);
			}
			
			if(height(root.right.left) - height(root.right.right) < 0) {
				// R - R
				return leftRotate(root);
			}
			
		}
		return root;
	}
	
	public Node rightRotate(Node p) {
		Node c = p.left;
		Node t = c.right;
		
		c.right = p;
		p.left = t;
		
		p.height = Math.max(height(p.left), height(p.right)) + 1;
		c.height = Math.max(height(c.left), height(c.right)) + 1;
		
		return c;
	}
	
	public Node leftRotate(Node c) {
		Node p = c.right;
		Node t = p.left;
		
		p.left = c;
		c.right = t;
		
		p.height = Math.max(height(p.left), height(p.right)) + 1;
		c.height = Math.max(height(c.left), height(c.right)) + 1;
		
		return p;
	}
	
	public int height(Node root) {
		if(root == null) return 0;
		 
		return 1 + Math.max(height(root.left), height(root.right));
	}
	
	
	//Height = log2(no of nodes)
	public static void main(String[] args) {
		AVL tree = new AVL();
		
		for(int i = 1; i<=1000; i++) {
			tree.insert(i);
		}
		
		System.out.println(tree.height(root));
	}

}
