class Solution
{
    //Function to find a solved Sudoku. 
    static boolean isItValid(int[][] grid, int row, int col, int ele){
        for(int i = 0; i<9; i++){
            if(grid[row][i] == ele) return false;
            if(grid[i][col] == ele) return false;
            if(grid[3*(row/3)+(i/3)][3*(col/3)+(i%3)] == ele) return false;
        }
        
        return true;
    }
    
    static boolean SolveSudoku(int grid[][])
    {
        for(int i = 0; i<grid.length; i++){
            for(int j = 0; j<grid[0].length; j++){
                if(grid[i][j] == 0){
                   for(int c = 1; c<10; c++){
                        if(isItValid(grid, i, j, c)){
                            grid[i][j] = c;
                            if(SolveSudoku(grid)) return true;
                            else grid[i][j] = 0;
                        }
                    }
                    return false;
                }
            }
        }
        
        return true;
    }
    
    //Function to print grids of the Sudoku.
    static void printGrid (int grid[][])
    {
        for(int i = 0; i<grid.length; i++){
            for(int j = 0; j<grid[0].length; j++){
                System.out.print(grid[i][j]+" ");
            }
        }
    }
}
