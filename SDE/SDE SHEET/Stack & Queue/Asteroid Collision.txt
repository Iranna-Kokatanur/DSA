class Solution {
    public static int[] asteroidCollision(int N, int[] a) {
       
       Stack<Integer> st = new Stack<>();
       for(int i = 0; i<a.length; i++){
           if(a[i] > 0) st.add(a[i]);
           else{
               while(!st.isEmpty() && st.peek() > 0 && st.peek() < Math.abs(a[i])){
                   st.pop();
               }
               
               if(!st.isEmpty() && st.peek() > 0 && st.peek() == Math.abs(a[i])){
                   st.pop();
                   continue;
               }
               
               if(st.isEmpty() || st.peek() < 0) st.add(a[i]);
           }
       }
       
       int ans[] = new int[st.size()];
       
       int i = ans.length - 1;
       
       while(!st.isEmpty()){
           ans[i--] = st.peek();
           st.pop();
       }
       
       
       return ans;
    }
}
