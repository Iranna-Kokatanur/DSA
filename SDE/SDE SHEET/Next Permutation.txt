class Solution{
    
    public static void reverse(int [] arr, int start, int end){
	    while(start < end){
	        int temp = arr[start];
	        arr[start] = arr[end];
	        arr[end] = temp;
	        start++;
	        end--;
	    }
	}
    
    public static void nextPermutation(int[] nums) {
        
        int ind = -1;

        //find the index where arr[i] < arr[i+1]

        int n = nums.length;

        for(int i = n-2; i>=0; i--){
            if(nums[i] <  nums[i+1]) {
                ind = i;
                break;
            }
        }
        
        if(ind == -1){
            reverse(nums, 0, n-1);
            return;
        }

        // Find the immediate greater element for ind
        for(int i = n - 1; i>ind; i--){
            if(nums[i] > nums[ind]){
                int temp = nums[i];
                nums[i] = nums[ind];
                nums[ind] = temp;
                break;
            }
        }

        // sort the next elements which are after ind (Just reverse it)

        reverse(nums, ind+1, n-1);
    }
    
    static List<Integer> nextPermutation(int N, int arr[]){
        nextPermutation(arr);
        // System.out.println(Arrays.toString(arr));
        List<Integer> ans = new ArrayList<>();
        for(int num : arr) ans.add(num);
        return ans;
    }
}
